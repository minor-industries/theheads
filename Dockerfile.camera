# Stage 0 : Build the C library
FROM debian@sha256:87eefc7c15610cca61db5c0fd280911c6a737c0680d807432c0bd80cd0cca39b AS lib_builder

WORKDIR /foundry

RUN apt-get update -y && apt-get install -y build-essential cmake git

RUN git clone https://github.com/jgarff/rpi_ws281x.git \
  && cd rpi_ws281x \
  && mkdir build \
  && cd build \
  && cmake -D BUILD_SHARED=OFF -D BUILD_TEST=OFF .. \
  && cmake --build . \
  && make install

FROM golang:1.20-bullseye@sha256:851af0a8ca4eba552c84db5b2edac7f3be15deb5892217961a1d4b175585a603

COPY --from=lib_builder /usr/local/lib/libws2811.a /usr/local/lib/
COPY --from=lib_builder /usr/local/include/ws2811 /usr/local/include/ws2811

WORKDIR /pkg

RUN DEBIAN_FRONTEND=noninteractive apt-get update -y
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y wget dpkg-dev

RUN arch=`dpkg-architecture -q DEB_BUILD_ARCH` && \
    wget https://theheads.sfo2.digitaloceanspaces.com/shared/builds/arm64/opencv_4.5.5-2_${arch}.deb

RUN DEBIAN_FRONTEND=noninteractive apt-get install -y ./opencv_4.5.5-2_*.deb
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y ffmpeg
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y libjpeg62-turbo-dev

WORKDIR /build

COPY heads heads
COPY codelab codelab
COPY packager packager
COPY platform platform
COPY protobuf protobuf

WORKDIR /build/heads

RUN go mod download
RUN go build -o `mktemp -d` ./cmd/leds
RUN go build -o `mktemp -d` ./cmd/lowred
RUN go build -o `mktemp -d` ./cmd/camera