# Stage 0 : Build the C library
FROM debian:buster@sha256:853b9ec779e55f670cbdcb5e15bfb778b5be2c5c61fc8c655638b7a977d273c6 AS lib_builder

WORKDIR /foundry

RUN apt-get update -y && apt-get install -y \
    build-essential \
    cmake \
    git \
    wget \
    dpkg-dev \
    ffmpeg \
    libjpeg62-turbo-dev

RUN git clone https://github.com/jgarff/rpi_ws281x.git \
  && cd rpi_ws281x \
  && mkdir build \
  && cd build \
  && cmake -D BUILD_SHARED=OFF -D BUILD_TEST=OFF .. \
  && cmake --build . \
  && make install

ENV OPENCV_VER="4.5.5-2"

RUN arch=`dpkg-architecture -q DEB_BUILD_ARCH` && \
    wget https://theheads.sfo2.digitaloceanspaces.com/shared/builds/${arch}/opencv_${OPENCV_VER}_${arch}.deb


RUN apt-get install -y libgtk2.0-0

RUN dpkg -i /foundry/opencv_${OPENCV_VER}_armhf.deb


RUN wget https://go.dev/dl/go1.21.3.linux-armv6l.tar.gz
RUN tar -xzvf go1.21.3.linux-armv6l.tar.gz
ENV PATH="$PATH:/foundry/go/bin"

WORKDIR /build

COPY codelab codelab
COPY packager packager
COPY platform platform
COPY protobuf protobuf

WORKDIR /build/heads

COPY heads/camera ./camera
RUN (cd camera && go mod download)

COPY heads/leds ./leds
COPY heads/cmd/leds ./cmd/leds

COPY heads/cmd/lowred ./cmd/lowred

COPY heads/go.mod ./go.mod
COPY heads/go.sum ./go.sum

RUN go mod download

RUN go build -o `mktemp -d` ./cmd/leds
RUN go build -o `mktemp -d` ./cmd/lowred

RUN apt-get install -y pkg-config

ENV OPENCV_VER=4.5.5-2

RUN arch=`dpkg-architecture -q DEB_BUILD_ARCH` && \
    wget https://theheads.sfo2.digitaloceanspaces.com/shared/builds/${arch}/opencv_${OPENCV_VER}_${arch}.deb

RUN dpkg -i /foundry/opencv_${OPENCV_VER}_armhf.deb


RUN (cd camera && go build -o `mktemp -d` ./cmd/camera)